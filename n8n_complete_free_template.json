{
  "name": "Komplette kostenlose Social Media & E-Mail Automation",
  "nodes": [
    {
      "parameters": {
        "updates": [
          {
            "name": "message",
            "value": "={{ $json.message.text }}"
          },
          {
            "name": "chat_id",
            "value": "={{ $json.chat.id }}"
          },
          {
            "name": "user_id",
            "value": "={{ $json.from.id }}"
          },
          {
            "name": "username",
            "value": "={{ $json.from.username }}"
          }
        ]
      },
      "id": "telegram-trigger",
      "name": "Telegram Bot Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "telegram-bot"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "command-check",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/start",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "command-filter",
      "name": "Befehl Filter",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "🎬 Willkommen zur kompletten kostenlosen Automation!\n\n📹 Video & Foto Befehle:\n/video [text] - Video mit Avatar generieren\n/photo [text] - Foto erstellen\n/avatar [name] - Avatar erstellen\n\n📤 Upload Befehle:\n/upload_instagram [caption] - Zu Instagram hochladen\n/upload_tiktok [caption] - Zu TikTok hochladen\n/upload_youtube [title] [description] - Zu YouTube hochladen\n\n📧 E-Mail Befehle:\n/email_setup [email] [password] - E-Mail einrichten\n/email_read - E-Mails lesen\n/email_send [to] [subject] [text] - E-Mail senden\n/email_auto_reply [keywords] [template] - Auto-Antworten\n\nBeispiel: /video Hallo Welt!"
      },
      "id": "welcome-message",
      "name": "Willkommensnachricht",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "video-command",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/video",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "video-command-filter",
      "name": "Video Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "jsCode": "// Text aus Telegram-Nachricht extrahieren\nconst message = $input.first().json.message.text;\nconst videoText = message.replace('/video', '').trim();\n\nif (!videoText) {\n  return {\n    json: {\n      error: true,\n      message: 'Bitte geben Sie einen Text für das Video an. Beispiel: /video Hallo Welt!'\n    }\n  };\n}\n\nreturn {\n  json: {\n    video_text: videoText,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "extract-video-text",
      "name": "Video Text extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "url": "https://api.elevenlabs.io/v1/text-to-speech/21m00Tcm4TlvDq8ikWAM",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "{{ $env.ELEVENLABS_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.video_text }}"
            },
            {
              "name": "model_id",
              "value": "eleven_monolingual_v1"
            },
            {
              "name": "voice_settings",
              "value": "{\"stability\": 0.5, \"similarity_boost\": 0.5}"
            }
          ]
        },
        "options": {}
      },
      "id": "text-to-speech",
      "name": "Text zu Sprache (ElevenLabs)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "url": "https://api.d-id.com/talks",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Basic {{ $env.DID_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "script",
              "value": "{\"type\": \"text\", \"input\": \"={{ $json.video_text }}\"}"
            },
            {
              "name": "config",
              "value": "{\"fluent\": true, \"pad_audio\": 0.0}"
            },
            {
              "name": "source_url",
              "value": "https://create-images-results.d-id.com/DefaultPresenters/Noelle_f/image.jpeg"
            }
          ]
        },
        "options": {}
      },
      "id": "create-avatar-video",
      "name": "Avatar Video erstellen (D-ID)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 400]
    },
    {
      "parameters": {
        "url": "https://api.d-id.com/talks/={{ $json.id }}/status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Basic {{ $env.DID_API_KEY }}"
            }
          ]
        },
        "options": {}
      },
      "id": "check-video-status",
      "name": "Video Status prüfen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "status-check",
              "leftValue": "={{ $json.status }}",
              "rightValue": "done",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "video-ready-check",
      "name": "Video fertig?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1780, 400]
    },
    {
      "parameters": {
        "url": "={{ $json.result_url }}",
        "options": {}
      },
      "id": "download-video",
      "name": "Video herunterladen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "chatId": "={{ $('extract-video-text').first().json.chat_id }}",
        "binaryData": true,
        "binaryPropertyName": "data",
        "additionalFields": {
          "caption": "🎬 Ihr Video ist fertig!\n\nText: {{ $('extract-video-text').first().json.video_text }}"
        }
      },
      "id": "send-video-telegram",
      "name": "Video an Telegram senden",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2220, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "photo-command",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/photo",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "photo-command-filter",
      "name": "Foto Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 600]
    },
    {
      "parameters": {
        "jsCode": "// Text aus Telegram-Nachricht extrahieren\nconst message = $input.first().json.message.text;\nconst photoText = message.replace('/photo', '').trim();\n\nif (!photoText) {\n  return {\n    json: {\n      error: true,\n      message: 'Bitte geben Sie einen Text für das Foto an. Beispiel: /photo Natur'\n    }\n  };\n}\n\nreturn {\n  json: {\n    photo_text: photoText,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "extract-photo-text",
      "name": "Foto Text extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 600]
    },
    {
      "parameters": {
        "url": "https://api.unsplash.com/photos/random",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json.photo_text }}"
            },
            {
              "name": "client_id",
              "value": "{{ $env.UNSPLASH_API_KEY }}"
            }
          ]
        },
        "options": {}
      },
      "id": "get-photo",
      "name": "Foto holen (Unsplash)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 600]
    },
    {
      "parameters": {
        "url": "={{ $json.urls.regular }}",
        "options": {}
      },
      "id": "download-photo",
      "name": "Foto herunterladen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 600]
    },
    {
      "parameters": {
        "chatId": "={{ $('extract-photo-text').first().json.chat_id }}",
        "binaryData": true,
        "binaryPropertyName": "data",
        "additionalFields": {
          "caption": "📸 Ihr Foto ist fertig!\n\nText: {{ $('extract-photo-text').first().json.photo_text }}"
        }
      },
      "id": "send-photo-telegram",
      "name": "Foto an Telegram senden",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1560, 600]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "upload-instagram",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/upload_instagram",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "upload-instagram-filter",
      "name": "Instagram Upload Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 800]
    },
    {
      "parameters": {
        "jsCode": "// Upload-Text extrahieren\nconst message = $input.first().json.message.text;\nconst parts = message.split(' ');\nconst caption = parts.slice(1).join(' ') || 'Automatisch generiertes Video';\n\nreturn {\n  json: {\n    platform: 'instagram',\n    caption: caption,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username\n  }\n};"
      },
      "id": "extract-instagram-upload",
      "name": "Instagram Upload Info extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 800]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/login",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "instagram"
            },
            {
              "name": "username",
              "value": "{{ $env.INSTAGRAM_USERNAME }}"
            },
            {
              "name": "password",
              "value": "{{ $env.INSTAGRAM_PASSWORD }}"
            }
          ]
        },
        "options": {}
      },
      "id": "instagram-login",
      "name": "Instagram Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 800]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/upload",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "instagram"
            },
            {
              "name": "file_path",
              "value": "{{ $('download-video').first().json.data }}"
            },
            {
              "name": "caption",
              "value": "={{ $json.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "upload-to-instagram",
      "name": "Zu Instagram hochladen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 800]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "upload-tiktok",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/upload_tiktok",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "upload-tiktok-filter",
      "name": "TikTok Upload Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 1000]
    },
    {
      "parameters": {
        "jsCode": "// Upload-Text extrahieren\nconst message = $input.first().json.message.text;\nconst parts = message.split(' ');\nconst caption = parts.slice(1).join(' ') || 'Automatisch generiertes Video';\n\nreturn {\n  json: {\n    platform: 'tiktok',\n    caption: caption,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username\n  }\n};"
      },
      "id": "extract-tiktok-upload",
      "name": "TikTok Upload Info extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 1000]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/login",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "tiktok"
            },
            {
              "name": "username",
              "value": "{{ $env.TIKTOK_USERNAME }}"
            },
            {
              "name": "password",
              "value": "{{ $env.TIKTOK_PASSWORD }}"
            }
          ]
        },
        "options": {}
      },
      "id": "tiktok-login",
      "name": "TikTok Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 1000]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/upload",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "tiktok"
            },
            {
              "name": "file_path",
              "value": "{{ $('download-video').first().json.data }}"
            },
            {
              "name": "caption",
              "value": "={{ $json.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "upload-to-tiktok",
      "name": "Zu TikTok hochladen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 1000]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "upload-youtube",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/upload_youtube",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "upload-youtube-filter",
      "name": "YouTube Upload Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 1200]
    },
    {
      "parameters": {
        "jsCode": "// Upload-Text extrahieren\nconst message = $input.first().json.message.text;\nconst parts = message.split(' ');\nconst title = parts[1] || 'Automatisch generiertes Video';\nconst description = parts.slice(2).join(' ') || 'Video automatisch generiert mit n8n';\n\nreturn {\n  json: {\n    platform: 'youtube',\n    title: title,\n    description: description,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username\n  }\n};"
      },
      "id": "extract-youtube-upload",
      "name": "YouTube Upload Info extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 1200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/login",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "youtube"
            },
            {
              "name": "username",
              "value": "{{ $env.YOUTUBE_EMAIL }}"
            },
            {
              "name": "password",
              "value": "{{ $env.YOUTUBE_PASSWORD }}"
            }
          ]
        },
        "options": {}
      },
      "id": "youtube-login",
      "name": "YouTube Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 1200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/upload",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "youtube"
            },
            {
              "name": "file_path",
              "value": "{{ $('download-video').first().json.data }}"
            },
            {
              "name": "title",
              "value": "={{ $json.title }}"
            },
            {
              "name": "description",
              "value": "={{ $json.description }}"
            }
          ]
        },
        "options": {}
      },
      "id": "upload-to-youtube",
      "name": "Zu YouTube hochladen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 1200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "email-setup",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/email_setup",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "email-setup-filter",
      "name": "E-Mail Setup Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 1400]
    },
    {
      "parameters": {
        "jsCode": "// E-Mail Setup Text extrahieren\nconst message = $input.first().json.message.text;\nconst parts = message.split(' ');\nconst email = parts[1];\nconst password = parts[2];\n\nif (!email || !password) {\n  return {\n    json: {\n      error: true,\n      message: 'Bitte geben Sie E-Mail und Passwort an. Beispiel: /email_setup email@example.com password'\n    }\n  };\n}\n\nreturn {\n  json: {\n    email: email,\n    password: password,\n    chat_id: $input.first().json.chat_id,\n    user_id: $input.first().json.user_id,\n    username: $input.first().json.username\n  }\n};"
      },
      "id": "extract-email-setup",
      "name": "E-Mail Setup Info extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 1400]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/email/setup",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $json.email }}"
            },
            {
              "name": "password",
              "value": "={{ $json.password }}"
            }
          ]
        },
        "options": {}
      },
      "id": "setup-email",
      "name": "E-Mail Setup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 1400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "email-read",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/email_read",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "email-read-filter",
      "name": "E-Mail Lesen Befehl",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 1600]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/email/read",
        "options": {}
      },
      "id": "read-emails",
      "name": "E-Mails lesen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 1600]
    },
    {
      "parameters": {
        "jsCode": "// E-Mails formatieren\nconst emails = $input.first().json.emails;\nlet emailList = '📧 Ihre letzten E-Mails:\\n\\n';\n\nemails.forEach((email, index) => {\n  emailList += `${index + 1}. Von: ${email.sender}\\n`;\n  emailList += `   Betreff: ${email.subject}\\n`;\n  emailList += `   Datum: ${email.date}\\n\\n`;\n});\n\nreturn {\n  json: {\n    email_list: emailList,\n    chat_id: $('email-read-filter').first().json.chat_id\n  }\n};"
      },
      "id": "format-emails",
      "name": "E-Mails formatieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 1600]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.email_list }}"
      },
      "id": "send-email-list",
      "name": "E-Mail Liste senden",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1340, 1600]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "✅ Upload erfolgreich!\n\nPlattform: {{ $json.platform }}\nCaption: {{ $json.caption }}"
      },
      "id": "upload-success-instagram",
      "name": "Instagram Upload Erfolg",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1560, 800]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "✅ Upload erfolgreich!\n\nPlattform: {{ $json.platform }}\nCaption: {{ $json.caption }}"
      },
      "id": "upload-success-tiktok",
      "name": "TikTok Upload Erfolg",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1560, 1000]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "✅ Upload erfolgreich!\n\nPlattform: {{ $json.platform }}\nTitel: {{ $json.title }}\nBeschreibung: {{ $json.description }}"
      },
      "id": "upload-success-youtube",
      "name": "YouTube Upload Erfolg",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1560, 1200]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "✅ E-Mail Setup erfolgreich!\n\nE-Mail: {{ $json.email }}"
      },
      "id": "email-setup-success",
      "name": "E-Mail Setup Erfolg",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1340, 1400]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "⏳ Video wird generiert... Bitte warten Sie einen Moment."
      },
      "id": "processing-message",
      "name": "Verarbeitungsnachricht",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [900, 500]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "❌ Fehler beim Generieren des Videos. Bitte versuchen Sie es erneut."
      },
      "id": "error-message",
      "name": "Fehlermeldung",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2000, 500]
    }
  ],
  "connections": {
    "telegram-trigger": {
      "main": [
        [
          {
            "node": "command-filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "command-filter": {
      "main": [
        [
          {
            "node": "welcome-message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "video-command-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "photo-command-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "upload-instagram-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "upload-tiktok-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "upload-youtube-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "email-setup-filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "email-read-filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "video-command-filter": {
      "main": [
        [
          {
            "node": "extract-video-text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error-message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-video-text": {
      "main": [
        [
          {
            "node": "processing-message",
            "type": "main",
            "index": 0
          },
          {
            "node": "text-to-speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "text-to-speech": {
      "main": [
        [
          {
            "node": "create-avatar-video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-avatar-video": {
      "main": [
        [
          {
            "node": "check-video-status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-video-status": {
      "main": [
        [
          {
            "node": "video-ready-check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "video-ready-check": {
      "main": [
        [
          {
            "node": "download-video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "check-video-status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download-video": {
      "main": [
        [
          {
            "node": "send-video-telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "photo-command-filter": {
      "main": [
        [
          {
            "node": "extract-photo-text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-photo-text": {
      "main": [
        [
          {
            "node": "get-photo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-photo": {
      "main": [
        [
          {
            "node": "download-photo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download-photo": {
      "main": [
        [
          {
            "node": "send-photo-telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-instagram-filter": {
      "main": [
        [
          {
            "node": "extract-instagram-upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-instagram-upload": {
      "main": [
        [
          {
            "node": "instagram-login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "instagram-login": {
      "main": [
        [
          {
            "node": "upload-to-instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-to-instagram": {
      "main": [
        [
          {
            "node": "upload-success-instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-tiktok-filter": {
      "main": [
        [
          {
            "node": "extract-tiktok-upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-tiktok-upload": {
      "main": [
        [
          {
            "node": "tiktok-login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tiktok-login": {
      "main": [
        [
          {
            "node": "upload-to-tiktok",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-to-tiktok": {
      "main": [
        [
          {
            "node": "upload-success-tiktok",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-youtube-filter": {
      "main": [
        [
          {
            "node": "extract-youtube-upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-youtube-upload": {
      "main": [
        [
          {
            "node": "youtube-login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "youtube-login": {
      "main": [
        [
          {
            "node": "upload-to-youtube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload-to-youtube": {
      "main": [
        [
          {
            "node": "upload-success-youtube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "email-setup-filter": {
      "main": [
        [
          {
            "node": "extract-email-setup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-email-setup": {
      "main": [
        [
          {
            "node": "setup-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setup-email": {
      "main": [
        [
          {
            "node": "email-setup-success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "email-read-filter": {
      "main": [
        [
          {
            "node": "read-emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "read-emails": {
      "main": [
        [
          {
            "node": "format-emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-emails": {
      "main": [
        [
          {
            "node": "send-email-list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}